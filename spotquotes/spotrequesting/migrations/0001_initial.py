# Generated by Django 3.0.4 on 2020-08-01 20:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Spot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gross_weight', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('volume', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('origin_country', models.CharField(max_length=2, validators=[django.core.validators.RegexValidator(message='Country code is two letters', regex='[A-Z]{2}')])),
                ('origin_port', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator(message='Port code is three letters', regex='[A-Z]{3}')])),
                ('dest_country', models.CharField(max_length=2, validators=[django.core.validators.RegexValidator(message='Country code is two letters', regex='[A-Z]{2}')])),
                ('dest_port', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator(message='Port code is three letters', regex='[A-Z]{3}')])),
                ('time_registered', models.DateField(default=django.utils.timezone.now)),
                ('spot_status', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed')], max_length=6)),
                ('ship_week', models.CharField(max_length=2, validators=[django.core.validators.RegexValidator(message='Country code is two letters', regex='\x08([1-9]|1[0-9]|2[0-5]\x08)')])),
            ],
        ),
        migrations.CreateModel(
            name='Stakeholder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=15)),
                ('mail', models.CharField(max_length=40)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Winner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carrier_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotrequesting.Stakeholder')),
                ('spot_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotrequesting.Spot')),
            ],
        ),
        migrations.AddField(
            model_name='spot',
            name='requestor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotrequesting.Stakeholder'),
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator(message='Currency is three letters', regex='[A-Z]{3}')])),
                ('pickup', models.FloatField(default=0)),
                ('origin_cust', models.FloatField(default=0)),
                ('origin_hand', models.FloatField(default=0)),
                ('airfreight', models.FloatField(default=0)),
                ('dest_cust', models.FloatField(default=0)),
                ('dest_hand', models.FloatField(default=0)),
                ('delivery', models.FloatField(default=0)),
                ('screening', models.FloatField(default=0)),
                ('dgfee', models.FloatField(default=0)),
                ('carrier_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotrequesting.Stakeholder')),
                ('spot_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spotrequesting.Spot')),
            ],
        ),
    ]
